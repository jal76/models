#define TAK

piece base, hull, railings, exhaust1, exhaust2, wake1, wake2, wake3, wake4,
	main_turret_1, main_sleeve_1, main_barrel_1, main_flare_1,
	main_turret_2, main_sleeve_2, main_barrel_2, main_flare_2,
	torp_launcher, torp1, torp2, torp3,
	aa37_turret_1, aa37_sleeve_1, aa37_barrel_1, aa37_flare_1,
	aa37_turret_2, aa37_sleeve_2, aa37_barrel_2, aa37_flare_2,
	aa37_turret_3, aa37_sleeve_3, aa37_barrel_3, aa37_flare_3;

#define BASE_SMOKE_PERIOD	40
#define MIN_SMOKE_PERIOD	240

#define MAIN_GUN_REST_ANGLE		<-30>

//********************Turret turn speeds
#define MAIN_TURRET_TURN		<15>
#define MAIN_TURRET_PITCH		<20>

#define AA_TURRET_TURN			<30>
#define AA_TURRET_PITCH			<30>

#define TORP_TURRET_TURN		<5>

//*********************Recoil
#define MAIN_GUN_RECOIL			[1]
#define MAIN_GUN_RECOIL_SPEED	[10]
#define MAIN_GUN_BACK_SPEED		[0.9]

#define AA_GUN_RECOIL			[0.4]
#define AA_GUN_RECOIL_SPEED		[10]
#define AA_GUN_BACK_SPEED		[2]

//*********************Death anim
#define HULL_LIST_SPEED		<10>
#define HULL_LIST_ANGLE		<60>

//********************Engine smoke
#define ENGINE_SMOKE_PIECE1	exhaust1
#define ENGINE_SMOKE_PIECE2	exhaust2
#define ENGINE_SMOKE_PERIOD	200

#define RESTORE_PERIOD		2500

#define SIG_MOVE			2
#define SIG_AIM1			4
#define SIG_AIM2			8
#define SIG_AIM3			16
#define SIG_AIM4			32
#define SIG_AIM5			64
#define SIG_AIM6			128
#define SIG_DEATH			256

#define SMOKEPIECE	hull

static-var		torpedo, CurrentSpeed, bMoving;

#include "exptype.h"
#include "sfxtype.h"
#include "damageSmoke.h"

// effects
#define placeholder_EFFECT01 1024+1
#define placeholder_EFFECT02 1024+2
#define placeholder_EFFECT03 1024+3
#define placeholder_EFFECT04 1024+4
#define XSMALL_MUZZLEFLASH 1024+5
#define XSMALL_MUZZLEDUST 1024+6
#define MG_MUZZLEFLASH 1024+7
#define SMALL_MUZZLEFLASH 1024+3
#define SMALL_MUZZLEDUST 1024+4
#define LARGE_MUZZLEFLASH 1024+8
#define LARGE_MUZZLEDUST 1024+9

WorkingLoop()
{
	while(TRUE)
	{
		if(bMoving)
		{
			// engine smoke comes here. And engine sound.
			emit-sfx SFXTYPE_BLACKSMOKE from ENGINE_SMOKE_PIECE1;
			emit-sfx SFXTYPE_BLACKSMOKE from ENGINE_SMOKE_PIECE2;
			sleep ENGINE_SMOKE_PERIOD;
		}
		sleep 500;
	}
}

InitTurrets()
//Pre-position turrets
{
	turn main_turret_2 to y-axis <180> now;
	turn main_sleeve_2 to x-axis MAIN_GUN_REST_ANGLE now;
	turn main_sleeve_1 to x-axis MAIN_GUN_REST_ANGLE now;
	turn aa37_turret_2 to y-axis <180> now;
	turn aa37_turret_3 to y-axis <180> now;
}

WaitForConstructionToFinish()
{
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 150;
	}
}

HideFlares()
{
	hide main_flare_1;
	hide main_flare_2;
	hide aa37_flare_1;
	hide aa37_flare_2;
	hide aa37_flare_3;
	hide torp1;
	hide torp2;
	hide torp3;
}

Create()
{
	start-script HideFlares();
	bMoving = FALSE;
	torpedo = 1;
	call-script InitTurrets();
	call-script WaitForConstructionToFinish();
	start-script DamageSmoke();
	start-script WorkingLoop();
}

SweetSpot(piecenum)
{
	piecenum = hull;
}

EmitWakes()
{
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		emit-sfx 2 from wake3;
		emit-sfx 2 from wake4;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	// We don't want this to trigger on VERY short stops
	sleep 300;
	bMoving = FALSE;
}

StopCatcher()
{
	var newXZ, oldXZ, newHeading, oldHeading;
	set-signal-mask SIG_MOVE|SIG_DEATH;
	while(TRUE)
	{
		sleep 300;
		newXZ = get PIECE_XZ(base);
		newHeading = get HEADING;
		if((oldXZ == newXZ) && (oldHeading == newHeading))
		{
			call-script StopMoving();
		}
		oldXZ = newXZ;
		oldHeading = newHeading;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	start-script EmitWakes();
	start-script StopCatcher();
	bMoving = TRUE;
}

RestoreTurret()
{
	set-signal-mask SIG_AIM1|SIG_AIM2|SIG_AIM3|SIG_AIM4|SIG_AIM5|SIG_AIM6|SIG_DEATH;
	sleep RESTORE_PERIOD;

	turn main_turret_1 to y-axis <0> speed MAIN_TURRET_TURN;
	turn main_sleeve_1 to x-axis MAIN_GUN_REST_ANGLE speed MAIN_TURRET_PITCH;

	turn main_turret_2 to y-axis <180> speed MAIN_TURRET_TURN;
	turn main_sleeve_2 to x-axis MAIN_GUN_REST_ANGLE speed MAIN_TURRET_PITCH;

	turn aa37_turret_1 to y-axis <0> speed AA_TURRET_TURN;
	turn aa37_sleeve_1 to x-axis <0> speed AA_TURRET_PITCH;
	turn aa37_turret_2 to y-axis <180> speed AA_TURRET_TURN;
	turn aa37_sleeve_2 to x-axis <0> speed AA_TURRET_PITCH;
	turn aa37_turret_3 to y-axis <180> speed AA_TURRET_TURN;
	turn aa37_sleeve_3 to x-axis <0> speed AA_TURRET_PITCH;

	turn torp_launcher to y-axis <0> speed TORP_TURRET_TURN;
}

QueryWeapon1(piecenum)
{
	piecenum = main_flare_1;
}

AimFromWeapon1(piecenum)
{
	piecenum = main_turret_1;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1|SIG_DEATH;
	turn main_turret_1 to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve_1 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret_1 around y-axis;
	wait-for-turn main_sleeve_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon1()
{
//	show main_flare_1;
	emit-sfx LARGE_MUZZLEFLASH from main_flare_1;
	emit-sfx LARGE_MUZZLEDUST from main_flare_1;
	move main_barrel_1 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel_1 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
//	hide main_flare_1;
}

QueryWeapon2(piecenum)
{
	piecenum = main_flare_2;
}

AimFromWeapon2(piecenum)
{
	piecenum = main_turret_2;
}

AimWeapon2(heading, pitch)
{
	signal SIG_AIM2;
	set-signal-mask SIG_AIM2|SIG_DEATH;
	turn main_turret_2 to y-axis heading speed MAIN_TURRET_TURN;
	turn main_sleeve_2 to x-axis (0-pitch) speed MAIN_TURRET_PITCH;
	wait-for-turn main_turret_2 around y-axis;
	wait-for-turn main_sleeve_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon2()
{
//	show main_flare_1;
	emit-sfx LARGE_MUZZLEFLASH from main_flare_2;
	emit-sfx LARGE_MUZZLEDUST from main_flare_2;
	move main_barrel_2 to z-axis (0-MAIN_GUN_RECOIL) speed MAIN_GUN_RECOIL_SPEED;
	sleep 200;
	move main_barrel_2 to z-axis [0] speed MAIN_GUN_BACK_SPEED;
//	hide main_flare_1;
}

// torpedo launcher
QueryWeapon3(piecenum)
{
	if(torpedo == 1)
	{
		piecenum = torp1;
	}
	if(torpedo == 2)
	{
		piecenum = torp2;
	}
	if(torpedo == 3)
	{
		piecenum = torp3;
	}
}

AimFromWeapon3(piecenum)
{
	piecenum = torp_launcher;
}

AimWeapon3(heading, pitch)
{
	signal SIG_AIM3;
	set-signal-mask SIG_AIM3|SIG_DEATH;
	turn torp_launcher to y-axis heading speed TORP_TURRET_TURN;
	wait-for-turn torp_launcher around y-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon3()
{
	sleep 200;
}

Shot3(foo)
{
	torpedo = torpedo + 1;
	if(torpedo>3)
	{
		torpedo = 1;
	}
}

// 37mm guns
QueryWeapon4(piecenum)
{
	piecenum = aa37_flare_1;
}

AimFromWeapon4(piecenum)
{
	piecenum = aa37_turret_1;
}

AimWeapon4(heading, pitch)
{
	signal SIG_AIM4;
	set-signal-mask SIG_AIM4|SIG_DEATH;
	turn aa37_turret_1 to y-axis heading speed AA_TURRET_TURN;
	turn aa37_sleeve_1 to x-axis (0-pitch) speed AA_TURRET_PITCH;
	wait-for-turn aa37_turret_1 around y-axis;
	wait-for-turn aa37_sleeve_1 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon4()
{
	//show aa_main_flare_1;
	//hide aa_main_flare_1;
}

Shot4(foo)
{
	emit-sfx SMALL_MUZZLEFLASH from aa37_flare_1;
	emit-sfx SMALL_MUZZLEDUST from aa37_flare_1;

	move aa37_barrel_1 to z-axis (0-AA_GUN_RECOIL) speed AA_GUN_RECOIL_SPEED;
	sleep 200;
	move aa37_barrel_1 to z-axis [0] speed AA_GUN_BACK_SPEED;
}

QueryWeapon5(piecenum)
{
	piecenum = aa37_flare_2;
}

AimFromWeapon5(piecenum)
{
	piecenum = aa37_turret_2;
}

AimWeapon5(heading, pitch)
{
	signal SIG_AIM5;
	set-signal-mask SIG_AIM5|SIG_DEATH;
	turn aa37_turret_2 to y-axis heading speed AA_TURRET_TURN;
	turn aa37_sleeve_2 to x-axis (0-pitch) speed AA_TURRET_PITCH;
	wait-for-turn aa37_turret_2 around y-axis;
	wait-for-turn aa37_sleeve_2 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon5()
{
	//show aa_main_flare_1;
	//hide aa_main_flare_1;
}

Shot5(foo)
{
	emit-sfx SMALL_MUZZLEFLASH from aa37_flare_2;
	emit-sfx SMALL_MUZZLEDUST from aa37_flare_2;

	move aa37_barrel_2 to z-axis (0-AA_GUN_RECOIL) speed AA_GUN_RECOIL_SPEED;
	sleep 200;
	move aa37_barrel_2 to z-axis [0] speed AA_GUN_BACK_SPEED;
}

QueryWeapon6(piecenum)
{
	piecenum = aa37_flare_3;
}

AimFromWeapon6(piecenum)
{
	piecenum = aa37_turret_3;
}

AimWeapon6(heading, pitch)
{
	signal SIG_AIM6;
	set-signal-mask SIG_AIM6|SIG_DEATH;
	turn aa37_turret_3 to y-axis heading speed AA_TURRET_TURN;
	turn aa37_sleeve_3 to x-axis (0-pitch) speed AA_TURRET_PITCH;
	wait-for-turn aa37_turret_3 around y-axis;
	wait-for-turn aa37_sleeve_3 around x-axis;
	start-script RestoreTurret();
	return (TRUE);
}

FireWeapon6()
{
	//show aa_main_flare_1;
	//hide aa_main_flare_1;
}

Shot6(foo)
{
	emit-sfx SMALL_MUZZLEFLASH from aa37_flare_3;
	emit-sfx SMALL_MUZZLEDUST from aa37_flare_3;

	move aa37_barrel_3 to z-axis (0-AA_GUN_RECOIL) speed AA_GUN_RECOIL_SPEED;
	sleep 200;
	move aa37_barrel_3 to z-axis [0] speed AA_GUN_BACK_SPEED;
}

Killed(severity, corpsetype)
{
	signal SIG_DEATH;
	if (severity<99)
	{
		corpsetype = 1;
		turn hull to z-axis HULL_LIST_ANGLE speed HULL_LIST_SPEED;
		wait-for-turn hull around z-axis;
		explode hull type		BITMAPONLY|BITMAP1;
		return (TRUE);
	}
	corpsetype = 2;
	explode hull type		SHATTER|BITMAP1;
	explode main_turret_1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode aa37_turret_1 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode aa37_turret_2 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode aa37_turret_3 type	FALL|EXPLODE_ON_HIT|FIRE;
	explode torp_launcher type	FALL|EXPLODE_ON_HIT|FIRE;
	return (TRUE);
}